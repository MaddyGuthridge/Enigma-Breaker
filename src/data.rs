use crate::consts::NUM_LETTERS;

pub fn get_rotor_config(rotor_id: &str) -> (Vec<char>, [(char, char); NUM_LETTERS]) {
    match rotor_id {
        "I" => (vec!['R'], [
            ('a', 'u'),
            ('b', 'w'),
            ('c', 'y'),
            ('d', 'g'),
            ('e', 'a'),
            ('f', 'd'),
            ('g', 'f'),
            ('h', 'p'),
            ('i', 'v'),
            ('j', 'z'),
            ('k', 'b'),
            ('l', 'e'),
            ('m', 'c'),
            ('n', 'k'),
            ('o', 'm'),
            ('p', 't'),
            ('q', 'h'),
            ('r', 'x'),
            ('s', 's'),
            ('t', 'l'),
            ('u', 'r'),
            ('v', 'i'),
            ('w', 'n'),
            ('x', 'q'),
            ('y', 'o'),
            ('z', 'j'),
        ]),
        "II" => (vec!['F'], [
            ('a', 'a'),
            ('b', 'j'),
            ('c', 'p'),
            ('d', 'c'),
            ('e', 'z'),
            ('f', 'w'),
            ('g', 'r'),
            ('h', 'l'),
            ('i', 'f'),
            ('j', 'b'),
            ('k', 'd'),
            ('l', 'b'),
            ('m', 'o'),
            ('n', 't'),
            ('o', 'y'),
            ('p', 'u'),
            ('q', 'q'),
            ('r', 'g'),
            ('s', 'e'),
            ('t', 'n'),
            ('u', 'h'),
            ('v', 'x'),
            ('w', 'm'),
            ('x', 'i'),
            ('y', 'v'),
            ('z', 's'),
        ]),
        "III" => (vec!['W'], [
            ('a', 't'),
            ('b', 'a'),
            ('c', 'g'),
            ('d', 'b'),
            ('e', 'p'),
            ('f', 'c'),
            ('g', 's'),
            ('h', 'd'),
            ('i', 'q'),
            ('j', 'e'),
            ('k', 'u'),
            ('l', 'f'),
            ('m', 'v'),
            ('n', 'n'),
            ('o', 'z'),
            ('p', 'h'),
            ('q', 'y'),
            ('r', 'i'),
            ('s', 'x'),
            ('t', 'j'),
            ('u', 'w'),
            ('v', 'l'),
            ('w', 'r'),
            ('x', 'k'),
            ('y', 'o'),
            ('z', 'm'),
        ]),
        "IV" => (vec!['K'], [
            ('a', 'h'),
            ('b', 'z'),
            ('c', 'w'),
            ('d', 'v'),
            ('e', 'a'),
            ('f', 'r'),
            ('g', 't'),
            ('h', 'n'),
            ('i', 'l'),
            ('j', 'g'),
            ('k', 'u'),
            ('l', 'p'),
            ('m', 'x'),
            ('n', 'q'),
            ('o', 'c'),
            ('p', 'e'),
            ('q', 'j'),
            ('r', 'm'),
            ('s', 'b'),
            ('t', 's'),
            ('u', 'k'),
            ('v', 'd'),
            ('w', 'y'),
            ('x', 'o'),
            ('y', 'i'),
            ('z', 'f'),
        ]),
        "V" => (vec!['A'], [
            ('a', 'q'),
            ('b', 'c'),
            ('c', 'y'),
            ('d', 'l'),
            ('e', 'x'),
            ('f', 'w'),
            ('g', 'e'),
            ('h', 'n'),
            ('i', 'f'),
            ('j', 't'),
            ('k', 'z'),
            ('l', 'o'),
            ('m', 's'),
            ('n', 'm'),
            ('o', 'v'),
            ('p', 'j'),
            ('q', 'u'),
            ('r', 'd'),
            ('s', 'k'),
            ('t', 'g'),
            ('u', 'i'),
            ('v', 'a'),
            ('w', 'r'),
            ('x', 'p'),
            ('y', 'h'),
            ('z', 'b'),
        ]),
        _ => panic!("Unknown rotor id {rotor_id:?}")
    }
}


pub fn get_reflector_config(
    reflector_id: &str
) -> [(char, char); NUM_LETTERS / 2] {
    match reflector_id {
        "B" => [
            ('a', 'y'),
            ('b', 'r'),
            ('c', 'u'),
            ('d', 'h'),
            ('e', 'q'),
            ('f', 's'),
            ('g', 'l'),
            ('i', 'p'),
            ('j', 'x'),
            ('k', 'n'),
            ('m', 'o'),
            ('t', 'z'),
            ('v', 'w'),
        ],
        "C" => [
            ('a', 'f'),
            ('b', 'v'),
            ('c', 'p'),
            ('d', 'j'),
            ('e', 'i'),
            ('g', 'o'),
            ('h', 'y'),
            ('k', 'r'),
            ('l', 'z'),
            ('m', 'x'),
            ('n', 'w'),
            ('q', 't'),
            ('s', 'u'),
        ],
        _ => panic!("Unknown reflector id {reflector_id:?}")
    }
}
